#!/usr/bin/env python3

import os
from cryptography.fernet import Fernet

# Function to find all files in the current directory (excluding key and script files)
def find_files(excluded_files):
    files = []
    for file in os.listdir():
        if file in excluded_files or not os.path.isfile(file) or file.name == "main.py":
            continue
        files.append(file)
    return files

# Encrypt files
def encrypt_files(files, key):
    for file in files:
        with open(file, "rb") as thefile:
            contents = thefile.read()
        contents_encrypted = Fernet(key).encrypt(contents)
        with open(file, "wb") as thefile:
            thefile.write(contents_encrypted)
    print("All of your files have been encrypted successfully!")

# Decrypt files
def decrypt_files(files, key):
    for file in files:
        with open(file, "rb") as thefile:
            contents = thefile.read()
        contents_decrypted = Fernet(key).decrypt(contents)
        with open(file, "wb") as thefile:
            thefile.write(contents_decrypted)
    print("Your files have been decrypted successfully!")

# Main execution
def main():
    excluded_files = {"thekey.key", __file__}  # Exclude the key and this script itself
    files = find_files(excluded_files)
    print(f"Files found: {files}")

    # Ask the user what action they want to perform
    action = input("Do you want to encrypt or decrypt your files? (type 'encrypt' or 'decrypt'): ").strip().lower()

    if action == "encrypt":
        key = Fernet.generate_key()
        with open("thekey.key", "wb") as thekey:
            thekey.write(key)
        encrypt_files(files, key)

    elif action == "decrypt":
        if not os.path.exists("thekey.key"):
            print("Error: Decryption key file ('thekey.key') is missing.")
            return

        with open("thekey.key", "rb") as thekey:
            key = thekey.read()

        secret_phrase = "secret"
        user_phrase = input("Enter the secret phrase to decrypt your files: ").strip()

        if user_phrase == secret_phrase:
            decrypt_files(files, key)
        else:
            print("Sorry, wrong secret phrase.")

    else:
        print("Invalid choice. Please type 'encrypt' or 'decrypt'.")

# Ensure this script is only executed when run directly
if __name__ == "__main__":
    main()
